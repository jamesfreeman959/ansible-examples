---
#Provision some instances:
#Note that the AMI's used here are for "Microsoft Windows Server 2016 Base" and "Microsoft Windows Server 2016 with SQL Server Express" respectively - this should work with other Windows AMI's including Windows Server 2012 and Windows Server 2012 R2. 
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - group_vars/secret.yml
 
  tasks:
  - name: Launch webserver instances
    ec2:
     access_key="{{ ec2_access_key }}"
     secret_key="{{ ec2_secret_key }}"
     keypair="{{ ec2_keypair }}"
     group="{{ ec2_security_group }}"
     type="{{ ec2_instance_type }}"
     image="ami-ee8dbb88"
     region="{{ ec2_region }}"
     instance_tags="{'ansible_group':'windows_webservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ tower_user_name }}'}"
     count="{{ ec2_instance_count }}"
     wait=true
     user_data="{{ lookup('template', 'userdata.txt.j2') }}"
    register: ec2web

    tags:
      - web

  - name: Launch database instance
    ec2:
     access_key="{{ ec2_access_key }}"
     secret_key="{{ ec2_secret_key }}"
     keypair="{{ ec2_keypair }}"
     group="{{ ec2_security_group }}"
     type="{{ ec2_instance_type }}"
     image="ami-5d8eb83b"
     region="{{ ec2_region }}"
     instance_tags="{'ansible_group':'windows_dbservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ tower_user_name }}'}"
     count="1"
     wait=true
     user_data="{{ lookup('template', 'userdata.txt.j2') }}"
    register: ec2db

    tags:
      - db

  - name: Wait for WinRM to come up
    wait_for:
      host="{{ item.public_ip }}"
      port=5986 
      delay=60
      timeout=320
      state=started
    with_items: "{{ ec2web.instances }}"

    tags:
      - web

  - name: Wait for WinRM to come up
    wait_for:
      host="{{ item.public_ip }}"
      port=5986 
      delay=60
      timeout=320
      state=started
    with_items: "{{ ec2db.instances }}"

    tags:
      - db
